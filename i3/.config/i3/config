
# GLOBAL/COLOR {{{

set $modx Mod4
# set $modx Control+Shift
set $mody Mod4+Mod1

default_orientation horizontal
workspace_layout tabbed

# Xresources      var      value       fallback
# set_from_resource $bg      background  #cec3ba
# set_from_resource $fg      foreground  #292929
# set_from_resource $black   color0      #1f1c19
# set_from_resource $red     color1      #895757
# set_from_resource $green   color2      #648066
# set_from_resource $yellow  color3      #8e744e
# set_from_resource $blue    color4      #28516B
# set_from_resource $purple  color5      #695a6f
# set_from_resource $cyan    color6      #4a6c72
# set_from_resource $grey    color7      #617274




for_window [class=".*"] title_format "%class :: %title "

#                         border  bg      text    indicat child_border
client.focused            #232323 #232f3b #F7F7F7 #4F4F4F #212a33
client.focused_inactive   #1A1A1A #232f3b #536d73 #121212 #212a33
client.unfocused          #030706 #232f3b #636d73 #4F4F4F #212a33
client.urgent             #1A1A1A #232f3b #a5a5a5 #1A1A1A #212a33
client.background         #1b2026

# font pango: Terminus 12px
# font pango: xos4 Terminus 16px
font pango:Ubuntu 10

focus_follows_mouse yes
workspace_auto_back_and_forth yes
focus_wrapping force

#smart_borders on
#smart_gaps on
# new_window none
default_border normal 1

# bindsym Control+a exec xte 'key Home'
# bindsym Control+e exec xte 'key End'

# for_window [class="^.*"] border pixel 0
bindsym $mody+b [class="^.*"] border toggle
mode "borders" {

	bindsym 0 [class="^.*"] border normal 0; mode "default"
	bindsym 1 [class="^.*"] border normal 1; mode "default"

	bindsym 2 [class="^.*"] border normal 2; mode "default"

	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mody+Shift+b mode "borders"

# }}}

# KEYS - WINDOW FOCUS {{{

# start a terminal
bindsym $modx+Return  exec --no-startup-id kitty
# bindsym $modx+Shift+Return exec tdrop --wm i3 -a -m -h 45%  kitty
bindsym $modx+Shift+Return exec tdrop   -a  -x 10% -y 20%  -h 55% -w 80%  kitty   
# bindsym $modx+Shift+Return exec tdrop --wm i3 -a -m  kitty; focus mode_toggle
# bindsym $modx+Shift+Return exec i3-quickterm shell
# bindsym F1 exec i3-quickterm shell

# bindsym $modx+r exec rofi -run-list-command ". ~/bin/getAliases" -run-command "/usr/bin/zsh -i -c '{cmd}'" -show run
# bindsym $modx+r exec zsh -c 'rofi -terminal xterm  -run-command "/usr/bin/zsh -i -c '{cmd}'" -show run'
# bindsym $modx+r exec rofi -run-terminal-command -show run


# change focus
bindsym $modx+j focus down
bindsym $modx+k focus up
bindsym $modx+h focus left
bindsym $modx+l focus right

bindsym $modx+Shift+h  workspace prev
bindsym $modx+Shift+l  workspace next
bindsym Control+Mod1+h  workspace prev
bindsym Control+Mod1+l  workspace next


bindsym $modx+Shift+o move container to workspace next
bindsym $modx+Shift+i move container to workspace prev

# move focused windowjjjj
bindsym $modx+Down  move down
bindsym $modx+Up  move up
bindsym $modx+Left  move left
bindsym $modx+Right  move right

bindsym $mody+f floating toggle
bindsym $mody+Shift+f focus mode_toggle

bindsym $modx+Control+r exec i3-input -F 'rename workspace to "%s"' -P 'New name: '
bindsym $modx+r exec --no-startup-id rofi  -show run

bindsym $mody+Shift+t exec tdrop current


# move the currently focused window to the scratchpad
bindsym $mody+Shift+z move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mody+z scratchpad show


# bindsym $mody+Tab [con_mark=_last] focus

# reload the configuration file
bindsym $modx+F1 restart
bindsym $modx+F2 reload
# bindsym $modx+F3 exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $modx+F3 exec "i3-msg exit"

bindsym XF86AudioRaiseVolume exec pulseaudio-ctl up
bindcode 115  exec pulseaudio-ctl up
bindsym XF86AudioLowerVolume exec pulseaudio-ctl down
bindcode 114  exec pulseaudio-ctl down
bindsym XF86AudioMute exec pulseaudio-ctl mute
bindcode 113  exec pulseaudio-ctl mute
bindcode 151 exec --no-startup-id rofi  -show run
bindsym F6 exec pulseaudio-ctl down
bindsym F7 exec pulseaudio-ctl up
bindsym F8 exec pulseaudio-ctl mute

bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 10
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 10

# use Mouse+$modx to drag floating windows to their wanted position. also resizing
floating_modifier Mod4

 # }}}

# WORKSPACES {{{
# set $ws1   "1: "
# set $ws2   "2: "
# set $ws3   "3: "
# set $ws4   "4: "
# set $ws5   "5: "
# set $ws6   "6: "
# set $ws7   "7: "
# set $ws8   "8: "
# set $ws9   "9: "
# set $ws10  "10: "
set $ws1   "1: ⚡"
set $ws2   "2: Ψ"
set $ws3   "3: Σ"
set $ws4   "4: Ω"
set $ws5   "5: ☮"
set $ws6   "6: ☭"
set $ws7   "7: "
set $ws8   "8: ☯"
set $ws9   "9: ♱"
set $ws10  "10: ☥"

workspace $ws1 output DP-2
workspace $ws2 output DP-2
workspace $ws3 output DP-2
workspace $ws4 output DP-2
workspace $ws5 output DP-2
workspace $ws7 output DP-1
workspace $ws8 output DP-1
workspace $ws9 output DP-1
workspace $ws10 output DP-1


# bindsym $modx+Control+w workspace back_and_forth

# bindsym $modx+Control+w move workspace to output right
# bindsym $modx+Shift+w move container to output right; focus output right

bindsym $modx+o focus output prev
bindsym $modx+i focus output next

bindsym $modx+Control+o workspace prev_on_output
bindsym $modx+Control+i workspace next_on_output


# bindsym Mod0+i workspace prev_on_output
# bindsym $modx+o workspace next_on_output

bindsym $modx+1 workspace $ws1
bindsym $modx+2 workspace $ws2
bindsym $modx+3 workspace $ws3
bindsym $modx+4 workspace $ws4
bindsym $modx+5 workspace $ws5
bindsym $modx+6 workspace $ws6
bindsym $modx+7 workspace $ws7
bindsym $modx+8 workspace $ws8
bindsym $modx+9 workspace $ws9
bindsym $modx+0 workspace $ws10

# move focused container to workspace
bindsym $modx+Shift+1 move container to workspace $ws1
bindsym $modx+Shift+2 move container to workspace $ws2
bindsym $modx+Shift+3 move container to workspace $ws3
bindsym $modx+Shift+4 move container to workspace $ws4
bindsym $modx+Shift+5 move container to workspace $ws5
bindsym $modx+Shift+6 move container to workspace $ws6
bindsym $modx+Shift+7 move container to workspace $ws7
bindsym $modx+Shift+8 move container to workspace $ws8
bindsym $modx+Shift+9 move container to workspace $ws9
bindsym $modx+Shift+0 move container to workspace $ws10


# }}}

# KEYS - SPLITS N FLOATS {{{
# focus the parent container

bindsym $modx+p focus parent
bindsym $modx+Shift+p focus child

# focus the child container
# bindsym $modx+x focus child

# split in horizontal orientation
bindsym $modx+b split h

# split in vertical orientation
bindsym $modx+v split v

# bindsym $modx+o open


# enter fullscreen (maximize) mode for the focused container
bindsym $modx+m fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $modx+s layout stacking
bindsym $modx+t layout tabbed
bindsym $modx+s layout toggle split
# change focus between tiling / floating windows
# bindsym $modx+space focus mode_toggle

# }}}

# GAPS {{{

gaps inner 6
gaps outer 0

bindsym $mody+Control+plus        gaps inner all plus  5
bindsym $mody+Control+minus       gaps inner all minus 5

# change gaps
# bindsym Mod+plus                gaps inner current plus  5
# bindsym Mod+minus               gaps inner current minus 5
# bindsym Mod+Shift+plus          gaps outer current plus  5
# bindsym Mod+Shift+minus         gaps outer current minus 5
bindsym $mody+plus  gaps outer all plus  5
bindsym $mody+minus gaps outer all minus 5
# }}}



# FOCUS {{{
# bindsym Control+Mod3+c [class="(?i)chromium"] focus
bindsym Control+Mod3+w [class="(?i)google-chrome"] focus
bindsym Control+Mod3+v [class="(?i)nvim-qt"] focus
show_marks yes
mode "marks" {
        # hardcoded focus keybindings
        bindsym w [class="(?i)google-chrome"] focus; mode "default"
        bindsym v [class="(?i)nvim-qt"] focus; mode "default"


        # keybindings for marking and jumping to clients
        bindsym m exec i3-input -F 'mark %s' -P 'Mark name: '
        bindsym g exec i3-input -F '[con_mark=%s] focus' -P 'Go to mark: '

        # Assign marks to keys 1-5
        bindsym Shift+1 mark mark1
        bindsym Shift+2 mark mark2; mode "default"
        bindsym Shift+3 mark mark3; mode "default"
        bindsym Shift+4 mark mark4; mode "default"
        bindsym Shift+5 mark mark5; mode "default"

        # Jump to clients marked 1-5
        bindsym 1 [con_mark="mark1"] focus
        bindsym 2 [con_mark="mark2"] focus; mode "default"
        bindsym 3 [con_mark="mark3"] focus; mode "default"
        bindsym 4 [con_mark="mark4"] focus; mode "default"
        bindsym 5 [con_mark="mark5"] focus; mode "default"

        # Exit to the default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mody+m mode "marks"
# }}}

# JUMPERS {{{
# shortcuts
mode "jumpers" {

        bindsym h exec --no-startup-id kitty --class=FLOATMITE -e "zsh -c 'web-hist'"; mode "default"
        bindsym b exec --no-startup-id kitty --class=FLOATMITE -e "zsh -c 'web-bookmarks.rb'"; mode "default"
        bindsym k exec --no-startup-id kitty --class=FLOATMITE -e "zsh -c 'fzf-kill'"; mode "default"

        # Exit to the default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mody+j mode "jumpers"
# }}}


bindsym $modx+Tab exec --no-startup-id rofi  -show window
bindsym $mody+c exec --no-startup-id rofi  -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'
bindsym $mody+v exec --no-startup-id ~/bin/greenclip-paste.sh 

bindsym $mody+Shift+1 mark mark1
bindsym $mody+Shift+2 mark mark2
bindsym $mody+Shift+3 mark mark3
bindsym $mody+Shift+4 mark mark4
bindsym $mody+Shift+5 mark mark5

# Jump to clients marked 1-5
bindsym $mody+1 [con_mark="mark1"] focus
bindsym $mody+2 [con_mark="mark2"] focus
bindsym $mody+3 [con_mark="mark3"] focus
bindsym $mody+4 [con_mark="mark4"] focus
bindsym $mody+5 [con_mark="mark5"] focus

bindsym Mod3+q kill
bindsym Mod4+q kill
bindsym Mod3+w focus output right

# floating_minimum_size 371 x 548
# floating_maximum_size 2000 x 1500

# bindsym --release button2 kill
# The middle button and a modifer over any part of the window kills the window
bindsym --whole-window $mody+button2 kill

# The right button toggles floating
bindsym --whole-window Mod3+Shift+button3 floating toggle

# bindsym $mody+Tab exec "rofi -show window -kb-row-down 'Control+Tab' -kb-accept-entry '!Control_R,!Control+Tab'"
# INITRC {{{
# assign [class="(?i)(?:telegramdesktop)"] → $ws8
# assign [class="(?i)(?:google-chrome)"]  → $ws2
# assign [class="(?i)(?:spotify)"]  → $ws7

for_window [class="(?i)(?:gpick)"] floating enable
for_window [class="(?i)(?:yad)"] floating enable
for_window [class="(?i)(?:nitrogen)"] floating enable
for_window [class="(?i)(?:doc-browser)"] floating enable
for_window [title="(?i)(?:Event Tester)"] floating enable
# for_window [class="mpv"] floating enable
for_window [class="FLOATMITE"] floating enable
# for_window [class="FLOATMITE"] resize set 2000 1400
assign [class="FLOATMITE"] → output primary


# exec_always --no-startup-id ~/bin/polybarz
exec_always --no-startup-id ~/bin/fix_xcursor
exec_always --no-startup-id greenclip daemon
#exec_always alttab

# exec --no-startup-id xfsettingsd
exec --no-startup-id telegram-desktop
# exec --no-startup-id spotify
# exec --no-startup-id google-chrome-stable
# exec --no-startup-id kitty
exec --no-startup-id dunst

exec --no-startup-id nitrogen --restore
exec --no-startup-id compton -b
exec --no-startup-id dropbox
exec --no-startup-id alttabhax
# exec --no-startup-id ~/bin/start-xkeysnail

# }}}
set $mode_launcher do: [h]ist [b]ookmarks [k]ill
bindsym $mody+p mode "$mode_launcher"

mode "$mode_launcher" {
    bindsym h exec --no-startup-id kitty --class=FLOATMITE -- zsh -c "fz-web-hist.sh"; mode "default"
    bindsym b exec --no-startup-id kitty --class=FLOATMITE -- zsh -c "fz-web-bookmarks.rb"; mode "default"
    bindsym k exec --no-startup-id kitty --class=FLOATMITE -- zsh -c "fz-kill.sh"; mode "default"


    bindsym Escape mode "default"
    bindsym Return mode "default"
}

# resize window (you can also use the mouse for that)
 mode "resize" {
         # These bindings trigger as soon as you enter the resize mode
 
         # same bindings, but for the arrow keys
         bindsym Left        resize shrink width 10 px or 10 ppt
         bindsym Down        resize grow height 10 px or 10 ppt
         bindsym Up          resize shrink height 10 px or 10 ppt
         bindsym Right       resize grow width 10 px or 10 ppt
 
         # back to normal: Enter or Escape or Mod1+r
         bindsym Return mode "default"
         bindsym Escape mode "default"
         bindsym Mod1+r mode "default"
 }
 
 bindsym $mody+r mode "resize"




bar {
    status_command python ~/.config/i3/pystatus.py
    # status_command i3blocks          
      # status_command 2>/tmp/i3blocks.err /path/to/i3blocks -vvv -c /path/to/config | tee /tmp/i3blocks.out
        binding_mode_indicator yes
        tray_output primary
        font pango: Ubuntu Mono 11
        colors {
             background       #21212111
            # background       #ffffff11
                statusline   #bfbfbf
                separator #666666

# class             border  backgr. text
                focused_workspace   #2b83a6 #2b83a6 #ffffff
                active_workspace    #212121 #212121 #ffffff
                inactive_workspace  #212121 #212121 #86888c
                urgent_workspace    #d64e4e #d64e4e #ffffff
        }
}

